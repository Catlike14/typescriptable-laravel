// This file is auto generated by TypescriptableLaravel.
declare namespace App.Models {
    export type Category = {
        id: number;
        name: string;
        slug: string;
        created_at?: Date;
        updated_at?: Date;
        posts?: Post[];
        posts_count?: number;
    };
    export type Feed = {
        id: number;
        title: string;
        slug: string;
        guid: string;
        subtitle?: string;
        picture?: string;
        link: string;
        description?: string;
        author?: string;
        owner_name?: string;
        owner_email?: string;
        language?: string;
        copyright?: string;
        generator?: string;
        keywords: any[];
        explicit?: string;
        type?: string;
        is_block: boolean;
        categories: any[];
        link_spotify?: string;
        link_apple_podcasts?: string;
        link_overcast?: string;
        link_youtube?: string;
        link_deezer?: string;
        link_google_podcasts?: string;
        created_at?: Date;
        updated_at?: Date;
        link_rss?: any;
        mediables_list?: string[];
        mediable?: { picture?: string };
        podcasts?: Podcast[];
        podcasts_count?: number;
    };
    export type Podcast = {
        id: number;
        title: string;
        subtitle?: string;
        slug: string;
        picture?: string;
        description?: string;
        guid?: string;
        file?: string;
        size: number;
        duration: number;
        serie_id?: number;
        feed_id?: number;
        status: "draft" | "scheduled" | "published";
        published_at: Date;
        audio_title?: string;
        audio_artist?: string;
        audio_album?: string;
        audio_genre?: string;
        audio_year: number;
        audio_track_number: number;
        audio_comment?: string;
        audio_album_artist?: string;
        audio_composer?: string;
        audio_disc_number: number;
        audio_is_compilation: boolean;
        audio_picture?: string;
        meta_title?: string;
        meta_description?: string;
        created_at?: Date;
        updated_at?: Date;
        size_human?: any;
        duration_human?: any;
        download_link?: any;
        direct_path?: any;
        direct_link?: any;
        mediables_list?: string[];
        seo?: string[];
        mediable?: { picture?: string };
        serie?: Serie;
        feed?: Feed;
        comments?: Comment[];
        comments_count?: number;
    };
    export type Post = {
        id: number;
        title: string;
        slug: string;
        abstract?: string;
        picture?: string;
        description?: string;
        body?: string;
        status: "draft" | "scheduled" | "published";
        published_at: Date;
        author_id?: number;
        meta_title?: string;
        meta_description?: string;
        created_at?: Date;
        updated_at?: Date;
        seo?: string[];
        categories?: Category[];
        author?: User;
        comments?: Comment[];
        categories_count?: number;
        comments_count?: number;
    };
    export type Serie = {
        id: number;
        title: string;
        slug: string;
        season_number: number;
        description?: string;
        picture?: string;
        recording_is_finished: boolean;
        broadcasting_is_finished: boolean;
        comment?: string;
        status: "draft" | "scheduled" | "published";
        published_at: Date;
        meta_title?: string;
        meta_description?: string;
        created_at?: Date;
        updated_at?: Date;
        seo?: string[];
        mediables_list?: string[];
        mediable?: { picture?: string };
        podcasts?: Podcast[];
        podcasts_count?: number;
    };
    export type User = {
        id: number;
        name: string;
        email: string;
        email_verified_at: Date;
        two_factor_confirmed_at?: Date;
        current_team_id?: number;
        picture?: string;
        role: "super_admin" | "admin" | "editor" | "user";
        created_at?: Date;
        updated_at?: Date;
        profile_photo_url?: any;
        is_super_admin?: boolean;
        is_admin?: boolean;
        is_editor?: boolean;
        is_user?: boolean;
        mediables_list?: string[];
        mediable?: { picture?: string };
        posts?: Post[];
        posts_count?: number;
        is_blocked: boolean;
    };
    export type Comment = {
        id: number;
        name?: string;
        email?: string;
        url?: string;
        content?: string;
        is_approved: boolean;
        approved_at: Date;
        rejected_at: Date;
        comment_id?: number;
        commentable_type: string;
        commentable_id: number;
        created_at?: Date;
        updated_at?: Date;
        gravatar?: string;
        commentable?: any;
    };
    export type Page = {
        id: number;
        title: string;
        slug: string;
        description?: string;
        content: any[];
        meta_title?: string;
        meta_description?: string;
        created_at?: Date;
        updated_at?: Date;
        seo?: string[];
        template_data?: any[];
        template: "home" | "about";
    };
}

declare namespace App {
    export type PaginateLink = {
        url: string;
        label: string;
        active: boolean;
    };
    export type Paginate<T = any> = {
        data: T[];
        current_page: number;
        first_page_url: string;
        from: number;
        last_page: number;
        last_page_url: string;
        links: App.PaginateLink[];
        next_page_url: string;
        path: string;
        per_page: number;
        prev_page_url: string;
        to: number;
        total: number;
    };
    export type ApiPaginate<T = any> = {
        data: T[];
        links: {
            first?: string;
            last?: string;
            prev?: string;
            next?: string;
        };
        meta: {
            current_page: number;
            from: number;
            last_page: number;
            links: App.PaginateLink[];
            path: string;
            per_page: number;
            to: number;
            total: number;
        };
    };
}

<?php

namespace Kiwilan\Typescriptable\Services\Types;

use Illuminate\Support\Facades\File;
use Kiwilan\Typescriptable\Services\Types\Inertia\InertiaEmbed;
use Kiwilan\Typescriptable\Services\Types\Inertia\InertiaPage;
use Kiwilan\Typescriptable\TypescriptableConfig;

class InertiaType
{
    protected function __construct(
      public string $filePath,
      public string $fileGlobal,
    ) {
    }

    public static function make(): self
    {
        $filename = TypescriptableConfig::inertiaFilename();
        $filenameGlobal = TypescriptableConfig::inertiaFilenameGlobal();

        $file = TypescriptableConfig::setPath($filename);
        $fileGlobal = TypescriptableConfig::setPath($filenameGlobal);

        $service = new self(
            filePath: $file,
            fileGlobal: $fileGlobal,
        );
        $types = $service->types();
        $global = $service->global();

        File::put($file, $types);

        if (TypescriptableConfig::inertiaGlobal()) {
            File::put($fileGlobal, $global);
        }

        return $service;
    }

    private function types(): string
    {
        $page = TypescriptableConfig::inertiaPage() ? InertiaPage::make() : '';

        return <<<typescript
// This file is auto generated by TypescriptableLaravel.
declare namespace Inertia {
  {$page}
}
typescript;
    }

    private function global(): string
    {
        $useEmbed = TypescriptableConfig::inertiaNpmTypescriptableLaravel() ? InertiaEmbed::make() : InertiaEmbed::native();

        return <<<typescript
{$useEmbed}

export {};
typescript;
    }
}

<?php

namespace Kiwilan\Steward\Services\Typescriptable;

use Illuminate\Support\Facades\File;
use Kiwilan\Typescriptable\Commands\TypescriptableZiggyCommand;
use Kiwilan\Typescriptable\Services\Typescriptable\Ziggy\InertiaEmbed;
use Kiwilan\Typescriptable\Services\Typescriptable\Ziggy\InertiaPage;
use Kiwilan\Typescriptable\Services\Typescriptable\Ziggy\ZiggyRouter;

class ZiggyType
{
    protected function __construct(
      public string $filePath,
      public bool $useRouter = true,
      public bool $usePage = true,
      public bool $useEmbed = false,
    ) {
    }

    public static function make(TypescriptableZiggyCommand $command): self
    {
        $outputPath = $command->typescriptable->outputPath;
        $outputFile = $command->typescriptable->outputFile;

        $file = "{$outputPath}/{$outputFile}";
        $service = new self($file, $command->useRouter, $command->usePage, $command->useEmbed);
        $generatedRoutes = $service->generate();

        if (! File::isDirectory($outputPath)) {
            File::makeDirectory($outputPath);
        }
        File::put($file, $generatedRoutes);

        return $service;
    }

    private function generate(): string
    {
        $useRouter = $this->useRouter ? ZiggyRouter::make() : '';
        $usePage = $this->usePage ? InertiaPage::make() : '';
        $useEmbed = $this->useEmbed ? InertiaEmbed::make() : InertiaEmbed::native();

        $routerInterface = $this->useRouter ? 'declare interface ZiggyLaravelRoutes extends LaravelRoutes {}' : '';
        $pageInterface = $this->usePage ? 'declare interface InertiaPage extends IPage {}' : '';

        $export = $this->useRouter ? 'export { LaravelRoutes };' : '';

        return <<<typescript
// This file is auto generated by TypescriptableLaravel.
{$useRouter}

{$usePage}

declare global {
  {$routerInterface}
  {$pageInterface}
}

{$useEmbed}

{$export}

typescript;
    }
}
